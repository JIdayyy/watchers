const util = require("util");

const images = [
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "dazdazdz" },
    { id: 1, url: "fazopj" },
];

const reduceImages = (images = []) => {
    let loop = 0;
    let iteration = 0;
    const imagesCopy = [...images];

    return images.reduce(
        (_, curr = {}) => {
            if (loop < 7) {
                loop++;
            } else {
                iteration++;
                loop = 1;
            }
            return new Array(iteration)
                .fill({ iteration: 0, images: [] })
                .map((item, index) => ({
                    iteration: index,
                    images: [...imagesCopy.slice(iteration * 7), curr],
                }));
        },
        [{ iteration: 0, images: [] }],
    );
};

const result = reduceImages(images);
console.log(util.inspect(result, false, null, true /* enable colors */));
console.table(result);
